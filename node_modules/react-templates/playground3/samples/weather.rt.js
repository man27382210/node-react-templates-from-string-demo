define([
    'react/addons',
    'lodash'
], function (React, _) {
    'use strict';
    function onKeyDown1(e) {
        if (e.keyCode === 13) {
            e.preventDefault();
            this.addCity();
        }
    }
    function repeatWeather2(city, cityIndex, weather, weatherIndex) {
        return React.createElement('img', {
            'src': 'http://openweathermap.org/img/w/' + weather.icon + '.png',
            'title': weather.description
        });
    }
    function repeatCity3(city, cityIndex) {
        return React.createElement.apply(this, [
            'div',
            { 'key': city.id },
            '\n        ',
            cityIndex + 1,
            ')\n        ',
            _.map(city.weather, repeatWeather2.bind(this, city, cityIndex)),
            React.createElement('span', { 'style': { whiteSpace: 'nowrap' } }, city.name, ', ', city.sys.country)
        ]);
    }
    return function () {
        return React.createElement.apply(this, [
            'div',
            {},
            React.createElement('h4', {}, 'Cities weather report'),
            React.createElement('input', {
                'placeholder': 'Type a city to add',
                'style': { width: '130px' },
                'valueLink': this.linkState('cityToAdd'),
                'onKeyDown': onKeyDown1.bind(this)
            }),
            React.createElement('button', { 'onClick': this.addCity }, 'Add'),
            this.state.loading ? React.createElement('div', { 'key': 'preloader' }, '\n        -- Loading --\n    ') : null,
            _.map(this.state.info, repeatCity3.bind(this)),
            React.createElement('button', { 'onClick': this.refresh }, 'Refresh')
        ]);
    };
});