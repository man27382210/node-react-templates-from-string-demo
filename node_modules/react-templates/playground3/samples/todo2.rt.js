define([
    'react/addons',
    'lodash'
], function (React, _) {
    'use strict';
    function onClick1(todo, todoIndex) {
        this.remove(todo);
    }
    function onChange2(todo, todoIndex) {
        this.toggleChecked(todoIndex);
    }
    function repeatTodo3(todo, todoIndex) {
        return React.createElement('div', { 'key': todo.key }, React.createElement('button', { 'onClick': onClick1.bind(this, todo, todoIndex) }, 'x'), React.createElement('input', {
            'type': 'checkbox',
            'checked': todo.done,
            'onChange': onChange2.bind(this, todo, todoIndex)
        }), React.createElement('span', { 'style': { textDecoration: todo.done ? 'line-through' : 'none' } }, todo.value));
    }
    function onKeyDown4(e) {
        if (e.keyCode == 13) {
            e.preventDefault();
            this.add();
        }
    }
    function onClick5() {
        this.add();
    }
    function onClick6() {
        this.clearDone();
    }
    return function () {
        return React.createElement.apply(this, [
            'div',
            {},
            '\n    Have ',
            _.filter(this.state.todos, { done: true }).length,
            ' todos done,\n    and ',
            _.filter(this.state.todos, { done: false }).length,
            ' not done\n    ',
            React.createElement('br', {}),
            _.map(this.state.todos, repeatTodo3.bind(this)),
            React.createElement('input', {
                'key': 'myinput',
                'type': 'text',
                'onKeyDown': onKeyDown4.bind(this),
                'valueLink': this.linkState('edited')
            }),
            React.createElement('button', { 'onClick': onClick5.bind(this) }, 'Add'),
            React.createElement('br', {}),
            React.createElement('button', { 'onClick': onClick6.bind(this) }, 'Clear done')
        ]);
    };
});