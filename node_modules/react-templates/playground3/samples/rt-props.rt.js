define([
    'react/addons',
    'lodash'
], function (React, _) {
    'use strict';
    function mergeProps(inline, external) {
        var res = _.assign({}, inline, external);
        if (inline.hasOwnProperty('style')) {
            res.style = _.defaults(res.style, inline.style);
        }
        if (inline.hasOwnProperty('className') && external.hasOwnProperty('className')) {
            res.className = external.className + ' ' + inline.className;
        }
        return res;
    }
    return function () {
        return React.createElement('div', {}, '\n    Style:\n    ', React.createElement('select', { 'valueLink': this.linkState('key') }, React.createElement('option', { 'value': 'color' }, 'Color'), React.createElement('option', { 'value': 'backgroundColor' }, 'Background color'), React.createElement('option', { 'value': 'borderColor' }, 'Border color')), React.createElement('br', {}), '\n    Value:\n    ', React.createElement('select', { 'valueLink': this.linkState('val') }, React.createElement('option', { 'value': 'blue' }, 'Blue'), React.createElement('option', { 'value': 'red' }, 'Red'), React.createElement('option', { 'value': 'yellow' }, 'Yellow')), React.createElement('br', {}), React.createElement('br', {}), React.createElement('div', mergeProps({
            'style': {
                padding: '5px',
                textAlign: 'center',
                border: '1px solid'
            }
        }, this.getProps()), 'Sample'));
    };
});